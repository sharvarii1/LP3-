#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

class Item {
public:
    int profit, weight;
    Item(int p, int w) : profit(p), weight(w) {}
};

bool compare(Item& a, Item& b) {
    return (double)a.profit / a.weight > (double)b.profit / b.weight;
}

double getMaxValue(vector<Item>& items, int capacity) {
    sort(items.begin(), items.end(), compare);

    double totalProfit = 0.0;
    for (auto& item : items) {
        if (capacity >= item.weight) {
            capacity -= item.weight;
            totalProfit += item.profit;
        } else {
            totalProfit += (double)capacity / item.weight * item.profit;
            break;
        }
    }

    return totalProfit;
}

int main() {
    vector<Item> items = { {30, 5}, {40, 10}, {45, 15}, {77, 22}, {90, 25} };
    int capacity = 60;

    cout << "Maximum profit: " << getMaxValue(items, capacity) << endl;
    return 0;
}
