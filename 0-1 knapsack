#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int knapsack(vector<int>& profit, vector<int>& weight, int capacity) {
    int n = profit.size();
    vector<int> dp(capacity + 1, 0);

    for (int i = 0; i < n; i++) {
        for (int j = capacity; j >= weight[i]; j--) {
            dp[j] = max(dp[j], dp[j - weight[i]] + profit[i]);
        }
    }
    return dp[capacity];
}

int main() {
    vector<int> profit = {10, 15, 40};
    vector<int> weight = {1, 2, 3};
    int capacity = 6;

    cout << knapsack(profit, weight, capacity) << endl;

    return 0;
}
